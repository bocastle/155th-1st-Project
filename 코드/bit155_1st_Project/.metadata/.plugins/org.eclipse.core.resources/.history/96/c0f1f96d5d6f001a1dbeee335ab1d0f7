package BitStore.Interface;

import java.util.Iterator;
import java.util.List;

import BitStore.domain.ProductVO;
import BitStore.util.BitStore;
import BitStore.util.Product;
import BitStore.util.PurChase;
import BitStore.util.User;

public class CashPayMentImpl implements PayMent {
	@Override
	public void buy() {
		// 가지고있는 돈보다 물건의 가격이 높을 경우
		System.out.println("소유한 돈 " + BitStore.currentLoginUser.getMoney());
		System.out.println("상품 총 가격 " + PurChase.totalPrice);
		if (BitStore.currentLoginUser.getMoney() < PurChase.totalPrice) {
			System.out.println("소유하신 돈이 부족합니다.");
		} else {
			int money = BitStore.currentLoginUser.getMoney() - PurChase.totalPrice;
			BitStore.currentLoginUser.setMoney(money);
			System.out.println("현재 남은 돈 : " + BitStore.currentLoginUser.getMoney());
			int point = (int) ((double) PurChase.totalPrice * 0.1);
			System.out.println("상품 총 가격의 10%인 " + point + "포인트가 적립되었습니다.");
			int point2 = BitStore.currentLoginUser.getUserPoint();
			BitStore.currentLoginUser.setUserPoint(point + point2);
			// 재고량 빼고 파일저장
			Iterator<Integer> mapIter = BitStore.productList.keySet().iterator();
			while (mapIter.hasNext()) {
				int key = mapIter.next();
				ProductVO value = BitStore.productList.get(key);
				for (int i = 0; i < PurChase.basket.size(); i++) {
					if (PurChase.basket.get(i).getProductName() == value.getProductName()) {
						value.setStock(value.getStock() - 1);
					}
				}
			} // while_end

			Product.writeProduct();
			System.out.println("구매해주셔서 감사합니다. 안녕히가세요.");
		}
		BitStore.writeUserList();
	}
}
