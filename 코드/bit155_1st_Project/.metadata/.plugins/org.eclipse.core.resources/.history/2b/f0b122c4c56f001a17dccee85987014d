package BitStore.util;

import java.util.HashMap;

import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import BitStore.domain.UserVO;
import BitStore.ui.user.UserUI;

public class User {

	Scanner in = new Scanner(System.in);

	public void selectUser() {
		System.out.println("[회원목록 조회]");
		Iterator<String> mapIter = BitStore.userList.keySet().iterator();
		while (mapIter.hasNext()) {
			String key = mapIter.next();
			UserVO value = BitStore.userList.get(key);
			System.out.println(value + " / ");
		}
	}

	public void selectUserByID() {
		System.out.print("상세조회할 아이디를 입력하세요. : ");
		String selectID = in.nextLine();
		Iterator<String> mapIter = BitStore.userList.keySet().iterator();
		while (mapIter.hasNext()) {
			String key = mapIter.next();
			UserVO value = BitStore.userList.get(key);
			if (selectID.equals(key)) {
				System.out.println(value);
				return;
			}
		}
		System.out.println("찾는 아이디가 없습니다.");
	}

	public void updateUser() {
		BitStore bs = new BitStore();
		BitStore.user = BitStore.currentLoginUser;
		System.out.println("※※※ 회원정보 수정입니다 ※※※ ");
		System.out.println("● 수정할 비밀번호를 입력해주세요 : ");
		bs.checkPwd();
		System.out.println("● 수정할 이름을 입력해 주세요 : ");
		BitStore.user.setUserName(in.nextLine().trim());
		System.out.println("● 수정할 핸드폰 번호를 입력해 주세요 : ");
		System.out.println("(010-0000-0000 형식으로 입력해 주세요.)");
		bs.checkPhone();
		BitStore.userList.put(BitStore.user.getID(), BitStore.user);
		BitStore.writeUserList();
		System.out.println("currentLoginUser" + BitStore.currentLoginUser);
		System.out.println("user" + BitStore.user);
	}

	public void deleteUser() {
		System.out.print("삭제할 아이디를 입력하세요. : ");
		String deleteID = in.nextLine();
		Iterator<String> mapIter = BitStore.userList.keySet().iterator();
		while (mapIter.hasNext()) {
			String key = mapIter.next();
			UserVO value = BitStore.userList.get(key);
			if (deleteID.equals(key)) {
				BitStore.userList.remove(key);
				System.out.println(key + " 아이디가 정상적으로 삭제되었습니다.");
				BitStore.writeUserList();
				return;
			}
		}
		System.out.println("삭제할 아이디가 없습니다.");
	}

	public void myInfoUser() { // 내 정보 확인
		UserVO user = BitStore.currentLoginUser;
		Iterator<String> mapIter = BitStore.userList.keySet().iterator();
		while (mapIter.hasNext()) {
			String key = mapIter.next();
			UserVO value = BitStore.userList.get(key);
			System.out.println(value);
		}
	}

	public void quitUser() { // 회원탈퇴
		UserUI userUI = new UserUI();
		String deleteID = BitStore.currentLoginUser.getID();
		Iterator<String> mapIter = BitStore.userList.keySet().iterator();
		while (mapIter.hasNext()) {
			String key = mapIter.next();
			UserVO value = BitStore.userList.get(key);
			if (deleteID.equals(key)) {
				BitStore.userList.remove(key);
				System.out.println(key + " 정상적으로 탈퇴되었습니다.");
				BitStore.writeUserList();
				userUI.service();
				return;
			}
		}

	}

}
