package BitStore.util;

import java.io.File;
import java.io.FileOutputStream;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;
import java.util.Set;
import java.util.Iterator;

import BitStore.domain.BoardVO;
import BitStore.domain.UserVO;

//	public static Map<Integer, BoardVO> boardList = new HashMap();

public class Board {
	private Scanner in = new Scanner(System.in);
	private static int count = 2;
	private SimpleDateFormat dt = new SimpleDateFormat("yyyy-MM-dd a HH:mm");
	private Date date = new Date();

	// 게시글 번호, 제목, 글쓴이, 날짜, 내용
	public void insertBoard() {
		BoardVO boardvo = new BoardVO();
		boardvo.setBoardNo(count++);
		System.out.print("제목: ");
		boardvo.setBoardTitle(in.nextLine());
		// String title = in.nextLine();
		System.out.print("내용: ");
		boardvo.setBoardContent(in.nextLine());
		// String content = in.nextLine();
		System.out.print("글쓴이: ");
		boardvo.setBoardWriter(in.nextLine());
		// String writer = in.nextLine();
		boardvo.setBoardDate(dt.format(date));
		BitStore.boardList.put(count, boardvo);
//		writeBoardList();
	}

//	public void writeBoardList() {
//		// 저장을 마지막
//		File file = new File(“Board.txt”);
//		try{
//			FileOutputStream fos = new FileOutputStream(file);
//			ObjectOutputStream oos = new ObjectOutputStream(fos);
//			//oos.writeObject(); 
//			oos.close();
//			fos.close();
//		}catch(Exception e){
//			System.out.println(“에러발생!!!“);
//			e.printStackTrace();
//		}
//		System.out.println(“저장되었습니다.“);
//	}

	public void updateBoard() {
		// 수정
		Set<Integer> set = BitStore.boardList.keySet();
		System.out.println("수정할 글 번호를 입력하세요");
		int inputNum = Integer.parseInt(in.nextLine());
		boolean flag = false;
		for (int i = 0; i < BitStore.boardList.size(); i++) {
			if (inputNum == BitStore.boardList.get(i).getBoardNo()) {
				flag = true;
				System.out.println("수정할 제목을 입력하세요 : ");
				BitStore.boardList.get(i).setBoardTitle(in.nextLine());
				System.out.println("수정할 내용을 입력하세요 : ");
				BitStore.boardList.get(i).setBoardContent(in.nextLine());
				return;
			}
		}
		if (flag == false) {
			System.out.println("입력한 글번호는 존재하지 않습니다.");
		}
		System.out.println("수정이 완료 되었습니다.");
	}

	public void deleteBoard() {
		// 삭제
		Set<Integer> set = BitStore.boardList.keySet();
		System.out.println("삭제할 글 번호를 입력하세요 : ");
		int inputNum = Integer.parseInt(in.nextLine());
		boolean flag = false;
		for (int i = 0; i < BitStore.boardList.size(); i++) {
			if (inputNum == BitStore.boardList.get(i).getBoardNo()) {
				flag = true;
				BitStore.boardList.remove(i);
				break;
			}
		}
		if (flag == false) {
			System.out.println("입력하신 번호는 존재하지 않습니다.");
			return;
		}
		System.out.println("게시글이 삭제 되었습니다.");
	}

	public void selectBoard() {
		Iterator<Integer> mapIter = BitStore.boardList.keySet().iterator();
		while (mapIter.hasNext()) {
			int key = mapIter.next();
			BoardVO value = BitStore.boardList.get(key);
			System.out.println(value + " / ");
		}

		Set<Integer> set = BitStore.boardList.keySet();
		System.out.println("번호\t글쓴이\t제목\t내용\t날짜");
		for (Integer number : set) {
			int a = BitStore.boardList.get(number).getBoardNo();
			String writer = BitStore.boardList.get(number).getBoardWriter();
			String title = BitStore.boardList.get(number).getBoardTitle();
			String content = BitStore.boardList.get(number).getBoardContent();
			String date = BitStore.boardList.get(number).getBoardDate();
			System.out.printf("%s\t%.2f\t%.2f\t%.2f\t%s\n", number, writer, title, date);
		}
	}

	public void selectBoardByNo() {
		Set<Integer> set = BitStore.boardList.keySet();
		System.out.println("번호\t글쓴이\t제목\t내용\t날짜");
		for (Integer number : set) {

		}
		return null;
	}
	/*
	 * System.out.println(“조회할 글 번호를 입력하세요 : “); int inputNum =
	 * Integer.parseInt(in.nextLine());
	 * System.out.println(“-----------------------“); boolean flag = false; // if 문
	 * switch 역할 for(int i = 0; i < BitStore.boardList.size(); i++){ //배열의 size 만큼
	 * for 문을 돌린다 BoardVO boardvo = BitStore.boardList.get(i); // list 로 가져온 i 값을
	 * BoardVO타입의 vo 변수에 할당(예쁜 코드를 위해) if(inputNum == boardvo.getBoardNo()){
	 * //inputNum 으로 입력 받은 값이 list 의 No 값과 같으면 flag = true; //flag 값을 true 로 바꿔준다
	 * System.out.println(“글번호 : ” + boardvo.getBoardNo()); System.out.println(“글쓴이
	 * : ” + boardvo.getBoardWriter()); System.out.println(“글제목 : ” +
	 * boardvo.getBoardTitle()); System.out.println(“글내용 : ” +
	 * boardvo.getBoardContent()); System.out.println(“날짜 : ” +
	 * boardvo.getBoardDate()); return null; } } if(flag == false){ //만약 for문안의 if
	 * 문을 안타면(조건이 맞지 않으면 ) flag 는 그대로 false이기 때문에 if 문 실행 System.out.println(“입력된
	 * 번호는 존재하지 않습니다.“); } System.out.println(“-----------------------“); return
	 * null;
	 */
	// 자세하게 보는 게시판기능
}
